class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        final int m = temperatures.length;
        final int[] ans = new int[m];
        final Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < m; i++) {
            while (!stack.empty() && temperatures[stack.peek()] < temperatures[i]) {
                ans[stack.peek()] = i - stack.pop();
            }
            stack.push(i);
        }
        return ans;
    }
}

//My solution.
// class Solution{
//     public static int[] dailyTemperatures(int[] temperatures) {
//         Stack<ArrayList<Integer>> stack = new Stack<>();

//         int[] answer = new int[temperatures.length];
//         for (int i = 0; i < temperatures.length; i++) {
//             boolean flag = false;
//             if(stack.isEmpty()){
//                 stack.push(new ArrayList<>(Arrays.asList(temperatures[i] , i)));
//             }
//             else if(temperatures[i] < stack.peek().get(0)){
//                 stack.push(new ArrayList<>(Arrays.asList(temperatures[i] , i)));
//             }
//             while(!stack.isEmpty() && temperatures[i] > stack.peek().get(0)){
//                 answer[stack.peek().get(1)] = i - stack.peek().get(1);
//                 stack.pop();
//                 flag = true;
//             }
//                 stack.push(new ArrayList<>(Arrays.asList(temperatures[i] , i)));
//         }
//         return answer;
//     }
// }